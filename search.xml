<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>「AI_01」回归：案例学习</title>
    <url>/2020/03/02/ai-lhyML-01/</url>
    <content><![CDATA[<h1 id="回归"><a href="#回归" class="headerlink" title="回归"></a>回归</h1><ul>
<li>股票预测系统：利用以往的数据来判断未来的股票.</li>
<li>无人驾驶：利用一些传感器数据来判断方向盘角度.</li>
<li>推荐系统：输入使用者A和商品B，输出使用者购买可能性.</li>
</ul>
<h1 id="应用示例"><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h1><p>评估宝可梦的<strong>CP值（战斗力）</strong>，从而判断是否进化宝可梦.</p>
<p>输入是某只宝可梦：</p>
<ul>
<li>$x$代表宝可梦.</li>
<li>$x_{cp}$代表宝可梦的<strong>CP值</strong>.</li>
<li>$x_s$代表宝可梦的<strong>物种</strong>.</li>
<li>$x_{hp}$代表宝可梦的<strong>生命值</strong>.</li>
<li>$x_w$代表宝可梦的<strong>重量</strong>.</li>
<li>$x_h$代表宝可梦的<strong>高度</strong>.</li>
<li>$y$代表<strong>进化后的CP值</strong>.</li>
</ul>
<h2 id="第一步：模型"><a href="#第一步：模型" class="headerlink" title="第一步：模型"></a>第一步：模型</h2><p>例如选择：<br>$$<br>y = b + w \cdot x_{cp}<br>$$</p>
<blockquote>
<p>线性模型：<br>$$<br>y = b + \sum w_i x_i<br>$$<br>其中：</p>
<ul>
<li>$x_i$是输入的不同属性，称为<strong>特征</strong>.</li>
<li>$w_i$是每个特征对应的<strong>权重</strong>.</li>
<li>$b$称为<strong>偏置</strong>.</li>
</ul>
</blockquote>
<h2 id="第二步：模型性能"><a href="#第二步：模型性能" class="headerlink" title="第二步：模型性能"></a>第二步：模型性能</h2><p>接下来要收集<strong>训练数据</strong>才能找到模型的函数.</p>
<p>我们收集的是模型的输入和输出，因为是一个回归的模型，所以<strong>输出是一个数值</strong>.</p>
<p>举例来说（用<strong>上标</strong>表示<strong>完整的对象的编号</strong>，用<strong>下标</strong>表示对象的<strong>成分</strong>）：</p>
<ul>
<li>杰尼龟$x^1$进化到卡咪龟$\hat{y}^1=979$.</li>
<li>伊布$x^2$进化到雷精灵$\hat{y}^2=1420$.</li>
</ul>
<p>由此，收集了10只宝可梦的数据：<br>$$<br>(x^1,\hat{y}^1), (x^2,\hat{y}^2), \dots ,(x^{10},\hat{y}^{10})<br>$$<br>可以绘制出来一张$x_{cp}-\hat{y}$的散点图。</p>
<blockquote>
<p>接下来要判断不同函数的好坏，这里需要定义一个新的函数<strong>损失函数$L$</strong>，这是一个函数的函数：</p>
<ul>
<li>输入：一个函数.</li>
<li>输出：这个函数有<strong>多不好</strong>.</li>
</ul>
<p>$$<br>L(f) = L(w,b)<br>$$</p>
<p>因为$f$是由$w, b$决定的，所以我们可以说损失函数是用来衡量一组参数的好坏.</p>
<p>实际上可以选择不同的损失函数的形式，这里就将数据带入到$y = b + w \cdot x_{cp}$中，然后计算差的平方和，即：<br>$$<br>L(f) = L(w,b) = \sum_{n=1}^{10} (\hat{y}^n - (b + w \cdot x_{cp}^n))^2<br>$$</p>
</blockquote>
<h2 id="第三步：最优方程"><a href="#第三步：最优方程" class="headerlink" title="第三步：最优方程"></a>第三步：最优方程</h2><blockquote>
<p>根据损失函数来挑选最好的方程<br>$$<br>f^* = \arg \min_f L(f)<br>$$<br>或<br>$$<br>\begin{align}<br>w^* , b^* &amp; = \arg \min_{w,b} L(w, b) \\<br>&amp; = \arg \min_{w,b} \sum_{n=1}^{10} (\hat{y}^n - (b + w \cdot x_{cp}^n))^2<br>\end{align}<br>$$<br>从中选择能够使得损失函数最好的$w,b$参数.</p>
</blockquote>
<h2 id="第三步：梯度下降法"><a href="#第三步：梯度下降法" class="headerlink" title="第三步：梯度下降法"></a>第三步：梯度下降法</h2><p>这里使用<strong>梯度下降法（Gradient Descent）</strong>来处理优化问题.</p>
<p>先假设一个比较简单的损失函数$L(w)$，只包含一个参数$w$.不一定是前面定义的损失函数，可以是任何<strong>可微分</strong>的函数.</p>
<p>现在的问题就是：<br>$$<br>w^* = \arg \min_w L(w)<br>$$<br>梯度下降法的做法：</p>
<ol>
<li><strong>随机</strong>选取一个初始的点$w^0$.</li>
<li>计算$\frac{dL}{dw}|_{w=w^0}$，如果算出来斜率是负值，就应该增大$w$；如果计算出来斜率是正值，就应该减小$w$.</li>
<li>参数更新，$w^0 - \eta \frac{dL}{dw}|_{w=w^0} \rightarrow w^1$，其中$\eta$称为学习率.</li>
<li>依次迭代2和3步.</li>
</ol>
<blockquote>
<p>推广到两个参数，步骤是一样的：</p>
<ol>
<li><strong>随机</strong>选取一个初始的点$w^0,b^0$.</li>
<li>计算$\frac{\partial L}{\partial w}|<em>{w=w^0,b=b^0},\frac{\partial L}{\partial b}|</em>{w=w^0,b=b^0}$.</li>
<li>参数更新，$w^0 - \eta \frac{\partial L}{\partial w}|<em>{w=w^0,b=b^0} \rightarrow w^1 , b^0 - \eta \frac{\partial L}{\partial b}|</em>{w=w^0,b=b^0} \rightarrow b^1$.</li>
<li>依次迭代2和3步.</li>
</ol>
<p><strong>注意</strong>：线性回归中，损失函数是<strong>凸函数</strong>，所以局部最优解就是全局最优解.</p>
</blockquote>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>求误差之和来评估模型的性能：<br>$$<br>e_{avg} = \sum_{n=1}^{10} e^n<br>$$<br>原来数据的$e_{avg} = 31.9$，又捕捉了10只新的宝可梦，计算$e_{avg} = 35.0$.</p>
<h2 id="选择其他模型"><a href="#选择其他模型" class="headerlink" title="选择其他模型"></a>选择其他模型</h2><p>选择一个更加复杂的模型，带有<strong>二次项</strong>：<br>$$<br>y = b + w_1 \cdot x_{cp} + w_2 \cdot (x_{cp})^2<br>$$<br>甚至带有<strong>三次项</strong>：<br>$$<br>y = b + w_1 \cdot x_{cp} + w_2 \cdot (x_{cp})^2 + w_3 \cdot (x_{cp})^3<br>$$<br><strong>四次项</strong>：<br>$$<br>y = b + w_1 \cdot x_{cp} + w_2 \cdot (x_{cp})^2 + w_3 \cdot (x_{cp})^3 + w_4 \cdot (x_{cp})^4<br>$$<br>出现了<strong>过拟合</strong>.</p>
<h2 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h2><blockquote>
<p>前面的损失函数只考虑了预测值和实际值之间的<strong>误差</strong>，正则化就是给损失函数加上额外的项.<br>$$<br>y = b + \sum w_i x_i<br>$$</p>
<p>$$<br>L = \sum_{n} (\hat{y}^n - (b + w \cdot x_{cp}^n))^2 + \lambda \sum (w_i)^2<br>$$</p>
</blockquote>
<p>我们期待找到的函数中$w_i$参数越小越好，因为$w_i$小的函数是非常<strong>平滑</strong>的，也就是函数对于输入变化不敏感，输入的变化对输出的变化影响很小，这样可以降低噪声干扰.</p>
<p>$\lambda$的数值越大，我们对$w_i$<strong>参数本身</strong>越关注，而减少了对误差的关注.我们可以手动调整$\lambda$的数值.</p>
<p>要注意的是，因为偏置$b$并不会影响函数的平滑程度，而只是让函数上下移动，所以正则化不用考虑偏置项.</p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>李宏毅</tag>
        <tag>机器学习</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>「Markdown_03」使用Flowchart绘图</title>
    <url>/2020/02/28/markdown-03/</url>
    <content><![CDATA[<h1 id="安装Flowchart插件"><a href="#安装Flowchart插件" class="headerlink" title="安装Flowchart插件"></a>安装Flowchart插件</h1><ol>
<li><p>在<strong>Git Bash</strong>中输入<code>npm install --save hexo-filter-flowchart</code>。</p>
</li>
<li><p>如果没有特殊要求的话，不需要进行<code>.yml</code>文件的配置。</p>
</li>
<li><p>到这里，我们就可以通过<strong>添加代码块</strong>的方式来绘制图形了，这里要注意，添加的代码块要注明代码类型为<code>flow</code>。</p>
</li>
</ol>
<h1 id="绘制流程图"><a href="#绘制流程图" class="headerlink" title="绘制流程图"></a>绘制流程图</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol>
<li>通用语法示意如下：</li>
</ol>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">tag=&gt;type: content:&gt;url</span><br><span class="line">...</span><br><span class="line">tag1(...) -&gt; tag2(...) -&gt; tag3(...)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>绘制流程图的代码分为两部分：<ol>
<li>定义元素</li>
<li>连接元素</li>
</ol>
</li>
</ol>
<h2 id="定义元素"><a href="#定义元素" class="headerlink" title="定义元素"></a>定义元素</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">tag=&gt;type: content:&gt;url</span><br></pre></td></tr></table></figure>

<ol>
<li>代码中的元素含义为：<ul>
<li>tag：标签，即元素的名称；</li>
<li>type：元素的类型；</li>
<li>content：元素块中的内容；</li>
<li>url：链接，给元素上添加超链接。</li>
</ul>
</li>
<li>其中元素的类型有六种：<ul>
<li>start</li>
<li>end</li>
<li>operation</li>
<li>subroutine</li>
<li>condition</li>
<li>inputoutput</li>
</ul>
</li>
</ol>
<h2 id="连接元素"><a href="#连接元素" class="headerlink" title="连接元素"></a>连接元素</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">tag1(...) -&gt; tag2(...) -&gt; tag3(...)</span><br></pre></td></tr></table></figure>

<ol>
<li><p>使用<code>-&gt;</code>符号连接两个元素；</p>
</li>
<li><p>对于<code>condition</code>类型的元素，在标签后面用<code>(yes/no)</code>来表示其不同的<strong>分支</strong>；</p>
</li>
<li><p>对于<strong>被连接的</strong>元素，在标签后面用<code>(right/left)</code>来规定其<strong>位置</strong>；</p>
</li>
<li><p>对于<strong>被连接的</strong><code>condition</code>类型的元素，可以用<code>(yes/no, right/left)</code>来同时确定<strong>分支和位置</strong>。</p>
</li>
</ol>
<h2 id="综合效果"><a href="#综合效果" class="headerlink" title="综合效果"></a>综合效果</h2><p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">st=&gt;start: Start|past:&gt;https://hengistyoo.github.io/</span><br><span class="line">e=&gt;end: End:&gt;https://hengistyoo.github.io/</span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;https://hengistyoo.github.io/</span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: catch something...|request</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<div id="flowchart-0" class="flow-chart"></div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start|past:>https://hengistyoo.github.io/
e=>end: End:>https://hengistyoo.github.io/
op1=>operation: My Operation|past
op2=>operation: Stuff|current
sub1=>subroutine: My Subroutine|invalid
cond=>condition: Yes
or No?|approved:>https://hengistyoo.github.io/
c2=>condition: Good idea|rejected
io=>inputoutput: catch something...|request

st->op1(right)->cond
cond(yes, right)->c2
cond(no)->sub1(left)->op1
c2(yes)->io->e
c2(no)->op2->e</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>进阶语法</tag>
        <tag>Flowchart</tag>
      </tags>
  </entry>
  <entry>
    <title>「线性代数_01」矩阵及其应用</title>
    <url>/2020/02/28/linearAlgebra-01/</url>
    <content><![CDATA[<h1 id="矩阵的概念"><a href="#矩阵的概念" class="headerlink" title="矩阵的概念"></a>矩阵的概念</h1><h2 id="矩阵的概念-1"><a href="#矩阵的概念-1" class="headerlink" title="矩阵的概念"></a>矩阵的概念</h2><blockquote>
<p><strong>定义：</strong></p>
<p>由$ m \times n $个数$ a_{ij} ( i=1,2,…,m;j=1,2,…,n ) $排成一个$ m $行$ n $列的矩形数表<br>$$<br>\begin{pmatrix}<br>a_{11} &amp; a_{12} &amp; \dots &amp; a_{1n} \\<br>a_{21} &amp; a_{22} &amp; \dots &amp; a_{2n} \\<br>\vdots &amp; \vdots &amp; &amp; \vdots \\<br>a_{m1} &amp; a_{m2} &amp; \dots &amp; a_{mn}<br>\end{pmatrix}<br>$$</p>
<p>或</p>
<p>$$<br>\begin{bmatrix}<br>a_{11} &amp; a_{12} &amp; \dots &amp; a_{1n} \\<br>a_{21} &amp; a_{22} &amp; \dots &amp; a_{2n} \\<br>\vdots &amp; \vdots &amp; &amp; \vdots \\<br>a_{m1} &amp; a_{m2} &amp; \dots &amp; a_{mn}<br>\end{bmatrix}<br>$$</p>
<p>称为$ m \times n $矩阵或$ m $行$ n $列矩阵，简称<strong>矩阵</strong>.横排称为矩阵的<strong>行</strong>，纵排称为矩阵的<strong>列</strong>，$ a_{ij} ( i=1,2,…,m;j=1,2,…,n ) $称为矩阵的第$ i $行第$ j $列<strong>元</strong>或$ (i,j) $<strong>元</strong>.$ m \times n $矩阵通常用大写字母如$ \pmb{A},\pmb{B},… $表示，有时也记作$ \pmb{A} = ( a_{ij} )_{m \times n} $.</p>
</blockquote>
<hr>
<blockquote>
<p><strong>注意</strong>：</p>
<ul>
<li><strong>实矩阵</strong>：元都是实数的矩阵.</li>
<li><strong>复矩阵</strong>：元都是复数的矩阵.</li>
<li><strong>零矩阵</strong>：元都是$ 0 $的矩阵，记为$ \pmb{O} $.</li>
<li><strong>列矩阵</strong>：只有一列的矩阵，也称为列向量.</li>
</ul>
<p>$$<br>\pmb{A} =<br>\begin{pmatrix}<br>a_1 \\<br>a_2 \\<br>\vdots \\<br>a_m<br>\end{pmatrix}<br>$$</p>
<ul>
<li><strong>行矩阵</strong>：只有一行的矩阵，也称为行向量.</li>
</ul>
<p>$$<br>\pmb{B} =<br>\begin{pmatrix}<br>b_1 &amp; b_2 &amp; \dots &amp;    b_n<br>\end{pmatrix}<br>$$</p>
<ul>
<li><p>行向量和列向量也可以用小写字母$ \pmb{a}, \pmb{b},…; \pmb{\alpha} , \pmb{\beta} , … $表示.</p>
</li>
<li><p>若$ m=n $，即矩阵的行数与列数相同时，称矩阵为<strong>$ n $阶矩阵</strong>或<strong>$ n $阶方阵</strong>.在$ n $阶矩阵<strong>$ A $</strong>中，从左上角到右下角的对角线称为$ \pmb{A} $的<strong>主对角线</strong>，主对角线上的元$ a_{ii} $称为$ n $阶矩阵$ \pmb{A} $的主对角线元；从右上角到左下角的对角线称为$ \pmb{A} $的<strong>次对角线</strong>.</p>
</li>
</ul>
</blockquote>
<h2 id="几种特殊矩阵"><a href="#几种特殊矩阵" class="headerlink" title="几种特殊矩阵"></a>几种特殊矩阵</h2><ul>
<li><p><strong>上三角（形）矩阵</strong>：主对角线以下的元全为$ 0 $的$ n $阶方阵.<br>$$<br>\pmb{A} =<br>\begin{pmatrix}<br>a_{11} &amp; a_{12} &amp; \dots &amp; a_{1n} \\<br>0 &amp; a_{22} &amp; \dots &amp; a_{2n} \\<br>\vdots &amp; \vdots &amp; &amp; \vdots \\<br>0 &amp; 0 &amp; \dots &amp; a_{nn}<br>\end{pmatrix}<br>$$</p>
</li>
<li><p><strong>下三角（形）矩阵</strong>：主对角线以上的元全为$ 0 $的$ n $阶方阵.</p>
</li>
</ul>
<p>$$<br>\pmb{B} =<br>\begin{pmatrix}<br>b_{11} &amp; 0 &amp; \dots &amp; 0 \\<br>b_{21} &amp; b_{22} &amp; \dots &amp; 0 \\<br>\vdots &amp; \vdots &amp; &amp; \vdots \\<br>b_{n1} &amp; b_{n2} &amp; \dots &amp; b_{nn}<br>\end{pmatrix}<br>$$</p>
<ul>
<li><p><strong>三角形矩阵</strong>：上三角形矩阵和下三角形矩阵统称为三角形矩阵.</p>
</li>
<li><p><strong>对角矩阵（diagonal matrix）</strong>：如果$ n $阶方阵的主对角线以外的元全为$ 0 $，则称为对角矩阵，记作$ \pmb{\Lambda} $或$ diag(a_{11} , a_{22} , \dots , a_{nn}) $.<br>$$<br>\pmb{\Lambda} =<br>\begin{pmatrix}<br>a_{11} &amp; &amp; &amp; \\<br>&amp; a_{22} &amp; &amp; \\<br>&amp;  &amp; \ddots &amp; \\<br>&amp;  &amp;  &amp; a_{nn}<br>\end{pmatrix}<br>$$</p>
</li>
</ul>
<blockquote>
<p>对角矩阵对角线上可以有零元.</p>
</blockquote>
<ul>
<li><p><strong>单位矩阵</strong>：主对角线上的元全为$ 1 $的$ n $阶对角矩阵称为$ n $阶单位矩阵，记作$ E_n $，$ I_n $或$ E $，$ I $.<br>$$<br>E = I =<br>\begin{pmatrix}<br>1 &amp; &amp; &amp; \\<br>&amp; 1 &amp; &amp; \\<br>&amp;  &amp; \ddots &amp; \\<br>&amp;  &amp;  &amp; 1<br>\end{pmatrix}<br>$$</p>
</li>
<li><p><strong>同型矩阵</strong>：两个行数与列数相等的矩阵.</p>
</li>
<li><p><strong>相等矩阵</strong>：设 </p>
</li>
</ul>
<p>$$ \pmb{A}=(a_{ij})_{mxn} $$</p>
<p>与</p>
<p>$$ \pmb{B}= (a_{ij})_{mxn} $$</p>
<p>是同型矩阵且对应元相等，则称$ \pmb{A} $与$ \pmb{B} $相等，记作$ \pmb{A} = \pmb{B} $.即</p>
<p>$$<br>\pmb{A} = \pmb{B} \Leftrightarrow a_{ij} = b_{ij},i=1,2,…,m;j=1,2,…,n.<br>$$</p>
<ul>
<li><strong>系数矩阵</strong>：在实际问题中，常常会遇到一些变量要用另外一些变量线性表示.设一组变量$ y_1 , y_2 ,…, y_m $用另一组变量$ x_1 , x_2 ,…, x_n $表示为<br>$$<br>\left \lbrace<br>\begin{aligned}<br>y_1 &amp; = a_{11}x_1+a_{12}x_2+…+a_{1n}x_n \\<br>y_2 &amp; = a_{21}x_1+a_{22}x_2+…+a_{2n}x_n \\<br>&amp; \dots \dots \dots \dots \\<br>y_m &amp; = a_{m1}x_1+a_{m2}x_2+…+a_{mn}x_n<br>\end{aligned}<br>\right.<br>$$</li>
</ul>
<p>称此关系式为从变量$ x_1 , x_2 ,…, x_n $到变量$ y_1 , y_2 ,…, y_m $的线性变换.</p>
<p>这个线性变换中的系数组成的矩阵$ {A} $称为此线性变换的系数矩阵.</p>
<p>$$<br>\pmb{A} =<br>\begin{pmatrix}<br>a_{11} &amp; a_{12} &amp; \dots &amp; a_{1n} \\<br>a_{21} &amp; a_{22} &amp; \dots &amp; a_{2n} \\<br>\vdots &amp; \vdots &amp; &amp; \vdots \\<br>a_{m1} &amp; a_{m1} &amp; \dots &amp; a_{mn}<br>\end{pmatrix}<br>$$</p>
<h1 id="矩阵的运算"><a href="#矩阵的运算" class="headerlink" title="矩阵的运算"></a>矩阵的运算</h1><h2 id="矩阵的加法与数乘"><a href="#矩阵的加法与数乘" class="headerlink" title="矩阵的加法与数乘"></a>矩阵的加法与数乘</h2><blockquote>
<p><strong>定义</strong>：</p>
<p>设有两个同型的$ m\times n $矩阵$ \pmb{A}=(a_{ij}),\pmb{B}=(b_{ij}) $. 矩阵$ \pmb{A} $与$ \pmb{B} $的和记作$ \pmb{A}+\pmb{B} $，规定为</p>
<p>$$<br>\pmb{A}+\pmb{B} =<br>\begin{pmatrix}<br>a_{11}+b_{11} &amp; a_{12}+b_{12} &amp; \dots &amp; a_{1n}+b_{1n} \\<br>a_{21}+b_{21} &amp; a_{22}+b_{22} &amp; \dots &amp; a_{2n}+b_{2n} \\<br>\vdots &amp; \vdots &amp; &amp; \vdots \\<br>a_{m1}+b_{m1} &amp; a_{m1}+b_{m1} &amp; \dots &amp; a_{mn}+b_{mn}<br>\end{pmatrix}<br>$$</p>
</blockquote>
<hr>
<blockquote>
<p><strong>定义</strong>：</p>
<p>数$ k $与矩阵$ \pmb{A} $的乘积，简称数乘，记作$ k\pmb{A} $或$ \pmb{A}k $,规定为</p>
<p>$$<br>k\pmb{A} = \pmb{A}k =<br>\begin{pmatrix}<br>ka_{11} &amp; ka_{12} &amp; \dots &amp; ka_{1n} \\<br>ka_{21} &amp; ka_{22} &amp; \dots &amp; ka_{2n} \\<br>\vdots &amp; \vdots &amp; &amp; \vdots \\<br>ka_{m1} &amp; ka_{m1} &amp; \dots &amp; ka_{mn}<br>\end{pmatrix}<br>$$</p>
</blockquote>
<hr>
<blockquote>
<p><strong>注意</strong>：</p>
<ul>
<li>矩阵的加法与数乘统称为<strong>矩阵的线性运算</strong>.</li>
<li><strong>负矩阵</strong>：对于矩阵$ \pmb{A}= (a_{ij}) $, 称矩阵$ (-a_{ij}) $为$ \pmb{A} $的负矩阵，记作$ -\pmb{A} $.</li>
<li><strong>矩阵的减法</strong>：由负矩阵可以定义矩阵$ {A} $与$ {B} $的减法为$ \pmb{A}-\pmb{B} = \pmb{A}+(-\pmb{B}) $，即两个同型矩阵相减，归结为它们的对应元相减.</li>
<li>$ \pmb{A} = \pmb{B} \Leftrightarrow \pmb{A}-\pmb{B}=\pmb{O} $.</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p><strong>性质</strong>：</p>
<p>矩阵的线性运算满足下列运算规律（设$ \pmb{A} , \pmb{B} , \pmb{C} $都是$ m\times n $矩阵，$ k $ 与$ l $ 为数）：</p>
<ol>
<li>$ \pmb{A}+\pmb{B}=\pmb{B}+\pmb{A} $.</li>
<li>$ (\pmb{A}+\pmb{B})+\pmb{C} = \pmb{A}+(\pmb{B}+\pmb{C}) $.</li>
<li>$ \pmb{A}+\pmb{O}=\pmb{A} $.</li>
<li>$ \pmb{A}+(-\pmb{A})=\pmb{O} $.</li>
<li>$ 1 \cdot \pmb{A} = \pmb{A} $.</li>
<li>$ (kl)\pmb{A}=k(l\pmb{A}) $.</li>
<li>$ (k+l)\pmb{A}=k\pmb{A}+l\pmb{A} $.</li>
<li>$ k(\pmb{A}+\pmb{B})=k\pmb{A}+k\pmb{B} $.</li>
</ol>
</blockquote>
<h2 id="矩阵的乘法"><a href="#矩阵的乘法" class="headerlink" title="矩阵的乘法"></a>矩阵的乘法</h2><blockquote>
<p><strong>定义</strong>：</p>
<p>设$ \pmb{A}=(a_{ij}) $是一个$ m\times s $矩阵，$ \pmb{B}=(b_{ij}) $是一个$ s\times n $矩阵，规定矩阵 $ \pmb{A} $与矩阵$ \pmb{B} $的乘积是$ m\times n $矩阵$ \pmb{C}=(c_{ij}) $，记为$ \pmb{C}=\pmb{AB} $,其中</p>
<p>$$<br>c_{ij} = a_{i1}b_{1j}+a_{i2}b_{2j}+…+a_{is}b_{sj}=\sum_{k=1}^{s}. (i=1,2,…,m;j=1,2,…,n)<br>$$</p>
</blockquote>
<hr>
<blockquote>
<p><strong>注意</strong>：</p>
<ul>
<li>矩阵乘法不满足交换律，即在一般条件下，$ \pmb{AB} \neq \pmb{BA} $.        </li>
<li>两个非零矩阵之积可能是零矩阵.</li>
<li>若$ \pmb{A}\neq\pmb{O} $，$\pmb{AB}=\pmb{AC} $不能推出$ \pmb{B}=\pmb{C} $.</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p><strong>性质</strong>：</p>
<p>矩阵的乘法满足下面的运算规律：</p>
<ul>
<li>$ (\pmb{AB})\pmb{C}=\pmb{A}(\pmb{BC}) $.</li>
<li>$ \pmb{A}(\pmb{B}+\pmb{C})=\pmb{AB}+\pmb{AC} , (\pmb{B}+\pmb{C})\pmb{A}=\pmb{BA}+\pmb{CA} $.</li>
<li>$ \lambda(\pmb{AB})=(\lambda\pmb{A})\pmb{B}=\pmb{A}(\lambda\pmb{B}) $，其中$ \lambda $是数.</li>
<li>$  E_mA_{m\times n} = A_{m\times n}E_n = A_{m\times n} $.</li>
</ul>
</blockquote>
<h2 id="方阵的幂与多项式"><a href="#方阵的幂与多项式" class="headerlink" title="方阵的幂与多项式"></a>方阵的幂与多项式</h2><p>设$ \pmb{A} $为$ n $阶方阵，$ k $为正整数，$ k $个$ \pmb{A} $的连乘积称为$ \pmb{A} $的$ k $次幂，记作$ \pmb{A}^k $.即</p>
<p>$$<br>\pmb{A}^k=\overbrace{\pmb{A}\pmb{A} … \pmb{A}}^{k}<br>$$</p>
<blockquote>
<p><strong>注意</strong>：$ \pmb{A}^0 = \pmb{E} $.</p>
</blockquote>
<hr>
<blockquote>
<p><strong>性质</strong>：</p>
<p>方阵的幂满足下面运算规律（$ \pmb{A} $为方阵，$ k,l $为非负整数）：</p>
<ul>
<li>$ \pmb{A}^k\pmb{A}^l=\pmb{A}^{k+l} $.</li>
<li>$ (\pmb{A}^k)^l=\pmb{A}^{kl} $.</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p><strong>注意</strong>：由于矩阵乘法不满足交换律，一般地，$ (\pmb{AB})^k\neq \pmb{A}^k\pmb{B}^k $.</p>
</blockquote>
<h2 id="矩阵的转置"><a href="#矩阵的转置" class="headerlink" title="矩阵的转置"></a>矩阵的转置</h2><h2 id="共轭矩阵"><a href="#共轭矩阵" class="headerlink" title="共轭矩阵"></a>共轭矩阵</h2><h2 id="可逆矩阵"><a href="#可逆矩阵" class="headerlink" title="可逆矩阵"></a>可逆矩阵</h2><h1 id="分块矩阵"><a href="#分块矩阵" class="headerlink" title="分块矩阵"></a>分块矩阵</h1><h1 id="矩阵的初等变换"><a href="#矩阵的初等变换" class="headerlink" title="矩阵的初等变换"></a>矩阵的初等变换</h1><h2 id="高斯消元法"><a href="#高斯消元法" class="headerlink" title="高斯消元法"></a>高斯消元法</h2><h2 id="初等变换"><a href="#初等变换" class="headerlink" title="初等变换"></a>初等变换</h2><h1 id="初等矩阵"><a href="#初等矩阵" class="headerlink" title="初等矩阵"></a>初等矩阵</h1>]]></content>
      <categories>
        <category>线性代数</category>
      </categories>
      <tags>
        <tag>线性代数</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_10」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-10/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_09」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-09/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_08」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-08/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_07」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-07/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_06」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-06/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_05」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-05/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_04」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-04/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_03」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-03/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_02」第一部分：还没想好题目</title>
    <url>/2020/02/28/python1-02/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Hexo_02」还没想好题目</title>
    <url>/2020/02/28/hexo-02/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>「Markdown_02」使用Mermaid绘图</title>
    <url>/2020/02/28/markdown-02/</url>
    <content><![CDATA[<h1 id="安装Mermaid插件"><a href="#安装Mermaid插件" class="headerlink" title="安装Mermaid插件"></a>安装Mermaid插件</h1><ol>
<li>在<strong>Git Bash</strong>中输入<code>npm install --save hexo-filter-mermaid-diagrams</code>。</li>
<li>在Hexo的<code>config.yml</code>文件末尾添加以下内容：</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mermaid chart</span></span><br><span class="line"><span class="attr">mermaid:</span> <span class="comment">## mermaid url https://github.com/knsv/mermaid</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># default true</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">"7.1.2"</span> <span class="comment"># default v7.1.2</span></span><br><span class="line">  <span class="attr">options:</span>  <span class="comment"># find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js</span></span><br><span class="line">    <span class="comment">#startOnload: true  // default true</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在<code>YOURBLOG/themes/YOURTHEME/layout</code>文件夹中寻找<code>footer.ejs</code>文件，即你的博客下，你正在应用的主题中的<code>layout</code>文件夹中的<code>footer.ejs</code>文件。这个文件的名称可能与<code>footer</code>有出入，但是名称中应当包含<code>footer</code>。在文件末尾添加以下内容：</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.mermaid.enable) &#123; %&gt;</span><br><span class="line">  &lt;script src=<span class="string">'https://unpkg.com/mermaid@&lt;%= theme.mermaid.version %&gt;/dist/mermaid.min.js'</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script&gt;</span></span><br><span class="line"><span class="regexp">    if (window.mermaid) &#123;</span></span><br><span class="line"><span class="regexp">      mermaid.initialize(&#123;theme: 'forest'&#125;);</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<p>其中<code>forest</code>是绘图的主题，不同主题的色彩组合不同，共4种主题可以选择，分别是<code>default</code>、<code>dark</code>、<code>forest</code>、<code>neutral</code>。</p>
<ol start="4">
<li>到这里，我们就可以通过<strong>添加代码块</strong>的方式来绘制图形了，这里要注意，添加的代码块要注明代码类型为<code>mermaid</code>。</li>
</ol>
<h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><h2 id="三种基本线型"><a href="#三种基本线型" class="headerlink" title="三种基本线型"></a>三种基本线型</h2><h3 id="基本线型"><a href="#基本线型" class="headerlink" title="基本线型"></a>基本线型</h3><p>节点之间通过连线来连接，一共有<strong>三种</strong>线型：虚线<code>-.-</code>、实线<code>---</code>、粗实线<code>===</code>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">A1 -.- A2</span><br><span class="line">B1 --- B2</span><br><span class="line">C1 === C2</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">graph TB
A1 -.- A2
B1 --- B2
C1 === C2</pre>

<h3 id="带箭头的线型"><a href="#带箭头的线型" class="headerlink" title="带箭头的线型"></a>带箭头的线型</h3><p>在基本线型符号串的右边加上<code>&gt;</code>符号，<strong>去掉左边第1个符号</strong>，使其<strong>仍然保持3个符号</strong>，就获得了带箭头的线型。其中虚线的第一个符号可以不去掉。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">A1 .-&gt; A2</span><br><span class="line">B1 --&gt; B2</span><br><span class="line">C1 ==&gt; C2</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TB
A1 .-> A2
B1 --> B2
C1 ==> C2</pre>

<h3 id="带说明文字的线型"><a href="#带说明文字的线型" class="headerlink" title="带说明文字的线型"></a>带说明文字的线型</h3><p>基本线型和带箭头的线型可以进行组合，中间加上说明文字即可。其中，说明文字左侧的基本线型只取<strong>前两个</strong>符号。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">A1 -. 说明文字 -.- A2</span><br><span class="line">B1 -. 说明文字 .-&gt; B2</span><br><span class="line">C1 -- 说明文字 --- C2</span><br><span class="line">D1 -- 说明文字 --&gt; D2</span><br><span class="line">E1 == 说明文字 === E2</span><br><span class="line">F1 == 说明文字 ==&gt; F2</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">graph TB
A1 -. 说明文字 -.- A2
B1 -. 说明文字 .-> B2
C1 -- 说明文字 --- C2
D1 -- 说明文字 --> D2
E1 == 说明文字 === E2
F1 == 说明文字 ==> F2</pre>

<h2 id="四种图形走向"><a href="#四种图形走向" class="headerlink" title="四种图形走向"></a>四种图形走向</h2><p>所有节点之间的连线，都具有方向性，方向共以下四种：</p>
<ul>
<li>TB/TD：从上到下；</li>
<li>BT：从下到上；</li>
<li>LR：从左到右；</li>
<li>RL：从右到左。</li>
</ul>
<p>效果如下：</p>
<pre class="mermaid">graph TB
A1 --> A2</pre>

<pre class="mermaid">graph BT
A1 --> A2</pre>

<pre class="mermaid">graph LR
A1 --> A2</pre>

<pre class="mermaid">graph RL
A1 --> A2</pre>

<h2 id="五种节点形状"><a href="#五种节点形状" class="headerlink" title="五种节点形状"></a>五种节点形状</h2><p>节点默认是矩形的，但是可以通过语法来选定节点的形状，语法如下表。</p>
<table>
<thead>
<tr>
<th>语法</th>
<th>形状</th>
</tr>
</thead>
<tbody><tr>
<td>[ ]</td>
<td>矩形</td>
</tr>
<tr>
<td>( )</td>
<td>圆角矩形</td>
</tr>
<tr>
<td>(( ))</td>
<td>圆形</td>
</tr>
<tr>
<td>{ }</td>
<td>菱形</td>
</tr>
<tr>
<td>&gt; ]</td>
<td>非对称节点</td>
</tr>
</tbody></table>
<p>效果如下：</p>
<pre class="mermaid">graph LR
A[A] --- B(B)
B --- C((C))
C --- D{D}
D --- E>E]</pre>

<h2 id="子图形"><a href="#子图形" class="headerlink" title="子图形"></a>子图形</h2><p>子图形可以被嵌入图形中，以<code>subgraph</code>开始，以<code>end</code>结束。另外，子图形<strong>必须提供标题</strong>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">A--&gt;D</span><br><span class="line">A--&gt;F</span><br><span class="line">subgraph 图三</span><br><span class="line">C--&gt;D</span><br><span class="line">C--&gt;G((G))</span><br><span class="line">end</span><br><span class="line">subgraph 图二</span><br><span class="line">A---B</span><br><span class="line">end</span><br><span class="line">subgraph 图一</span><br><span class="line">E-.-F</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">graph TB
A-->D
A-->F
subgraph 图三
C-->D
C-->G((G))
end
subgraph 图二
A---B
end
subgraph 图一
E-.-F
end</pre>

<h1 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h1><h2 id="定义角色"><a href="#定义角色" class="headerlink" title="定义角色"></a>定义角色</h2><p>用<code>participant</code>来定义参与者，用<code>as</code>来增加角色的别名。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">participant A</span><br><span class="line">panticipant B as C</span><br></pre></td></tr></table></figure>

<p>需要注意：</p>
<ul>
<li>定义角色不是必须的，参与者<strong>按照出场先后顺序排列</strong>，如果要把某个角色排在前面，就要定义他。</li>
<li>定义语句不一定要在消息传递之前，放在中间或者后面都可以。</li>
</ul>
<h2 id="消息连线"><a href="#消息连线" class="headerlink" title="消息连线"></a>消息连线</h2><h3 id="基本线型-1"><a href="#基本线型-1" class="headerlink" title="基本线型"></a>基本线型</h3><p>用<code>-&gt;</code>表示实线，用<code>--&gt;</code>表示虚线。</p>
<h3 id="带箭头的线型-1"><a href="#带箭头的线型-1" class="headerlink" title="带箭头的线型"></a>带箭头的线型</h3><p>用<code>-&gt;&gt;</code>表示带箭头的实线，用<code>–-&gt;&gt;</code>表示带箭头的虚线。</p>
<h3 id="带终止符的线型"><a href="#带终止符的线型" class="headerlink" title="带终止符的线型"></a>带终止符的线型</h3><p>用<code>-&gt;&gt;</code>表示带终止符的实线，用<code>–-&gt;&gt;</code>表示带终止符的虚线。</p>
<h3 id="综合效果"><a href="#综合效果" class="headerlink" title="综合效果"></a>综合效果</h3><p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">participant A</span><br><span class="line">participant B</span><br><span class="line">A -&gt; B:实线</span><br><span class="line">B --&gt; A:虚线</span><br><span class="line">A -&gt;&gt; B:实线箭头</span><br><span class="line">B --&gt;&gt; A:虚线箭头</span><br><span class="line">A -x B:实线终止符</span><br><span class="line">B --x A:虚线终止符</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">sequenceDiagram
participant A
participant B
A -> B:实线
B --> A:虚线
A ->> B:实线箭头
B -->> A:虚线箭头
A -x B:实线终止符
B --x A:虚线终止符</pre>

<h2 id="角色内部任务"><a href="#角色内部任务" class="headerlink" title="角色内部任务"></a>角色内部任务</h2><p>角色本身不仅传递消息，自身还存在任务，需要告诉他<strong>开始处理</strong>及<strong>处理完</strong>自己的任务。开始处理用<code>activate</code>，处理完毕用<code>deactivate</code>。</p>
<p>多数情况下，都是角色在<strong>接收到消息时</strong>才会启动或者结束自身任务，因此有一个快捷的办法，<strong>在消息连线后面加上+/-</strong>，表示接收消息的角色这时候应该<strong>开始/结束</strong>自身任务处理。</p>
<p>另外，如果有多个启动和完成任务的指令，记住他们一定是从最内侧进行配对的。</p>
<p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">participant A</span><br><span class="line">participant B</span><br><span class="line">A -&gt;&gt;+ B:B启动任务1</span><br><span class="line">B --&gt;&gt; A:消息</span><br><span class="line">activate B</span><br><span class="line">B --&gt;&gt; A:上一句让B启动了任务2。</span><br><span class="line">A -&gt;&gt;- B:B结束了任务，只能匹配任务2</span><br><span class="line">B --x A:这里有个终止符</span><br><span class="line">deactivate B</span><br><span class="line">A -x B:上一句B结束了任务，只能匹配任务1</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">sequenceDiagram
participant A
participant B
A ->>+ B:B启动任务1
B -->> A:消息
activate B
B -->> A:上一句让B启动了任务2。
A ->>- B:B结束了任务，只能匹配任务2
B --x A:这里有个终止符
deactivate B
A -x B:上一句B结束了任务，只能匹配任务1</pre>



<h2 id="贴标签"><a href="#贴标签" class="headerlink" title="贴标签"></a>贴标签</h2><p>给角色贴上便签<code>Note</code>，便签的位置有角色的左边、右边或者上方，但是<strong>没有下方</strong>。</p>
<p>语法是<code>Note left of/right of/over A/B/A,B : Text</code>，要注意的是，只有<code>over</code>后面可以跟随多个对象。</p>
<p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">participant A</span><br><span class="line">participant B</span><br><span class="line">Note over A:A的标签</span><br><span class="line">A -&gt;&gt; B:消息</span><br><span class="line">Note left of A:A的标签</span><br><span class="line">Note right of B:B的标签</span><br><span class="line">B --&gt;&gt; A:消息</span><br><span class="line">Note over A,B:A、B的标签</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">sequenceDiagram
participant A
participant B
Note over A:A的标签
A ->> B:消息
Note left of A:A的标签
Note right of B:B的标签
B -->> A:消息
Note over A,B:A、B的标签</pre>

<h2 id="条件结构"><a href="#条件结构" class="headerlink" title="条件结构"></a>条件结构</h2><p>时序在处理的时候，肯定会遇上有条件执行的情况，它的语法如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">alt 可选语句说明</span><br><span class="line">...</span><br><span class="line">else</span><br><span class="line">...</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>其中的<code>alt</code>是<code>alternative</code>的缩写，即这有两组时序是二选一的，相当于<code>if-else</code>语句。如果没有<code>else</code>，那么用另外一个关键词<code>opt</code>，它是<code>optional</code>的缩写，语法如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">opt 条件说明</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">participant A</span><br><span class="line">participant B</span><br><span class="line">A -&gt;&gt; B: 你好吗？</span><br><span class="line">alt 如果B很好</span><br><span class="line">B --&gt;&gt; A:我很好</span><br><span class="line">else</span><br><span class="line">B --&gt;&gt; A:我不好</span><br><span class="line">end</span><br><span class="line">B -&gt;&gt; A:你有空吗？咱看电影去。</span><br><span class="line">opt A有空</span><br><span class="line">A --&gt;&gt; B: 去吧</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">sequenceDiagram
participant A
participant B
A ->> B: 你好吗？
alt 如果B很好
B -->> A:我很好
else
B -->> A:我不好
end
B ->> A:你有空吗？咱看电影去。
opt A有空
A -->> B: 去吧
end</pre>

<h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><p>把几个语句用<code>loop end</code>语句圈起来，这就是时序循环。语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">loop 循环语句说明</span><br><span class="line">...</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">participant A</span><br><span class="line">participant B</span><br><span class="line">A -&gt;&gt; B: 有人在吗</span><br><span class="line">B -&gt;&gt; A: 在啊</span><br><span class="line">loop 这俩话痨</span><br><span class="line">A --&gt;&gt; B: 你好</span><br><span class="line">B --&gt;&gt; A: 你好</span><br><span class="line">end</span><br><span class="line">A -&gt;&gt; B: 我不玩了，只会说你好</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">sequenceDiagram
participant A
participant B
A ->> B: 有人在吗
B ->> A: 在啊
loop 这俩话痨
A -->> B: 你好
B -->> A: 你好
end
A ->> B: 我不玩了，只会说你好</pre>



<h1 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="时间及项目标题"><a href="#时间及项目标题" class="headerlink" title="时间及项目标题"></a>时间及项目标题</h3><ul>
<li>时间格式为<code>dateFormat YYYY-MM-DD</code>，定义图中坐标轴的时间格式，可供选择的字符串格式在<a href="http://momentjs.com/docs/#/parsing/string-format/" target="_blank" rel="noopener">这里</a>。</li>
<li>项目标题为<code>title &lt;project title&gt;</code>，项目的标题，中间可以用空格。</li>
</ul>
<h3 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h3><ul>
<li>阶段为<code>section &lt;phase name&gt;</code>,描述性字符串中间可以加空格。</li>
</ul>
<h3 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">活动名</span>&gt;</span></span>:[重要等级],[完成状态],[激活状态],[活动的引用名],[开始时间/依赖],[结束时间/持续时间]</span><br></pre></td></tr></table></figure>

<ul>
<li>活动名：必须。用于描述活动的内容或性质，中间可以包括空格，但不可包含<code>:</code>，因为冒号被用作与后面各项的分隔符。</li>
<li>重要等级：非必须。如果非常重要，则取值<code>crit</code> ，可为空。</li>
<li>完成状态：非必须。如果已完成，则用<code>done</code>表示，可为空。</li>
<li>激活状态：非必须。如果已激活，则为<code>active</code>，可为空。</li>
<li>活动引用名：非必须。给当前活动指定引用名称，以便下方引用，名称中<strong>不能包含空格</strong>。</li>
<li>开始时间：非必须。可以取绝对时间或相对时间。相对时间用<code>after</code>关键字。表示在另外一个活动完成之后开始，如果没有指定，则<strong>默认为上个活动结束的时间</strong>。</li>
<li>结束时间/持续时间：必须。可以是绝对时间，前提是<strong>它的前面应该是绝对时间</strong>。也可以是持续时间。</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">dateFormat  YYYY-MM-DD</span><br><span class="line">title 软件开发甘特图</span><br><span class="line">section 设计</span><br><span class="line">  需求: done, des1, 2014-01-06, 2014-01-08</span><br><span class="line">  原型: active, des2, 2014-01-09, 3d</span><br><span class="line">  UI设计: des3, after des2, 5d</span><br><span class="line">  未来任务: des4, after des3, 5d</span><br><span class="line">section 开发</span><br><span class="line">  学习准备理解需求: crit, done, 2014-01-06, 24h</span><br><span class="line">  设计框架: crit, done, after des2, 2d</span><br><span class="line">  开发: crit, active, 3d</span><br><span class="line">  未来任务: crit, 5d</span><br><span class="line">  耍: 2d</span><br><span class="line">section 测试</span><br><span class="line">  功能测试: active, a1, after des3, 3d</span><br><span class="line">  压力测试: after a1, 20h</span><br><span class="line">  测试报告: 48h</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">gantt
dateFormat  YYYY-MM-DD
title 软件开发甘特图
section 设计
  需求: done, des1, 2014-01-06, 2014-01-08
  原型: active, des2, 2014-01-09, 3d
  UI设计: des3, after des2, 5d
  未来任务: des4, after des3, 5d
section 开发
  学习准备理解需求: crit, done, 2014-01-06, 24h
  设计框架: crit, done, after des2, 2d
  开发: crit, active, 3d
  未来任务: crit, 5d
  耍: 2d
section 测试
  功能测试: active, a1, after des3, 3d
  压力测试: after a1, 20h
  测试报告: 48h</pre>

<h1 id="类结构图"><a href="#类结构图" class="headerlink" title="类结构图"></a>类结构图</h1><p>代码如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">Class01 <span class="xml"><span class="tag">&lt;<span class="name">|--</span> <span class="attr">AveryLongClass</span> <span class="attr">:</span> <span class="attr">Cool</span></span></span></span><br><span class="line"><span class="xml">Class03 *-- Class04</span></span><br><span class="line"><span class="xml">Class05 o-- Class06</span></span><br><span class="line"><span class="xml">Class07 .. Class08</span></span><br><span class="line"><span class="xml">Class09 --&gt;</span> C2 : Where am i?</span><br><span class="line">Class09 --* C3</span><br><span class="line">Class09 --|&gt; Class07</span><br><span class="line">Class07 : equals()</span><br><span class="line">Class07 : Object[] elementData</span><br><span class="line">Class01 : size()</span><br><span class="line">Class01 : int chimp</span><br><span class="line">Class01 : int gorilla</span><br><span class="line">Class08 <span class="xml"><span class="tag">&lt;<span class="name">--</span>&gt;</span></span> C2: Cool label</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<pre class="mermaid">classDiagram
Class01 <|-- AveryLongClass : Cool
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 --> C2 : Where am i?
Class09 --* C3
Class09 --|> Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
Class08 <--> C2: Cool label</pre>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>进阶语法</tag>
        <tag>Mermaid</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python_01」第一部分：数据类型</title>
    <url>/2020/02/28/python1-01/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>第一部分</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>「Markdown_01」基本语法</title>
    <url>/2020/02/26/markdown-01/</url>
    <content><![CDATA[<h1 id="设置标题"><a href="#设置标题" class="headerlink" title="设置标题"></a>设置标题</h1><h2 id="通用标题设置"><a href="#通用标题设置" class="headerlink" title="通用标题设置"></a>通用标题设置</h2><p>使用<code>#</code>符号来设置<strong>不同级别</strong>的标题。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote>
<h2 id="前两级标题设置"><a href="#前两级标题设置" class="headerlink" title="前两级标题设置"></a>前两级标题设置</h2><p><strong>一级标题</strong>使用<code>=</code>来设置，<strong>二级标题</strong>使用<code>-</code>来设置。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">一级标题</span><br><span class="line">===</span><br><span class="line"></span><br><span class="line">二级标题</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote>
<p>&nbsp;</p>
<h1 id="自然段换行"><a href="#自然段换行" class="headerlink" title="自然段换行"></a>自然段换行</h1><h2 id="新的自然段"><a href="#新的自然段" class="headerlink" title="新的自然段"></a>新的自然段</h2><p>只需要在两个自然段之间<strong>空一行</strong>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">第一段</span><br><span class="line"></span><br><span class="line">第二段</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>第一段</p>
<p>第二段</p>
</blockquote>
<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>在<strong>行末</strong>加<strong>两个空格</strong>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">第一行  </span><br><span class="line">第二行</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>第一行<br>第二行</p>
</blockquote>
<p>&nbsp;</p>
<h1 id="引用表现"><a href="#引用表现" class="headerlink" title="引用表现"></a>引用表现</h1><p>在<strong>行首</strong>加<code>&gt;</code>即可添加引用格式。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 引用这段话</span></span><br><span class="line">&gt;&gt;&gt; 多重引用这段话</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>引用这段话</p>
<blockquote>
<blockquote>
<p>多重引用这段话</p>
</blockquote>
</blockquote>
</blockquote>
<p>&nbsp;</p>
<h1 id="增加分割线"><a href="#增加分割线" class="headerlink" title="增加分割线"></a>增加分割线</h1><p>使用<code>---</code>、<code>***</code>、<code>___</code>、<code>- - -</code>都可以为文章增加分割线，其中<code>---</code><strong>与二级标题的区别</strong>在于，二级标题的<code>---</code>上一行是文字，而分割线的上一行是空行。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">___</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>- -</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<hr>
<hr>
<hr>
<hr>
</blockquote>
<p>&nbsp;</p>
<h1 id="强调表现"><a href="#强调表现" class="headerlink" title="强调表现"></a>强调表现</h1><p>将<strong>单个</strong><code>*</code> 或<code>_</code>加在文字两侧，就是<strong>斜体</strong>；将<strong>连续两个</strong><code>*</code> 或<code>_</code>加在文字两侧，就是<strong>粗体</strong>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span> <span class="emphasis">_斜体_</span></span><br><span class="line"><span class="strong">**粗体**</span> <span class="strong">__粗体__</span></span><br><span class="line"><span class="strong">***粗斜体**</span>* <span class="strong">___粗斜体__</span>_</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p><em>斜体</em> <em>斜体</em><br><strong>粗体</strong> <strong>粗体</strong><br><strong><em>粗斜体</em></strong> <strong><em>粗斜体</em></strong></p>
</blockquote>
<p>&nbsp;</p>
<h1 id="列表表现"><a href="#列表表现" class="headerlink" title="列表表现"></a>列表表现</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>将<code>-</code>、<code>*</code>、<code>+</code>符号置于行首，用<strong>两个空格分等级</strong>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">- </span>无序列表</span><br><span class="line"><span class="bullet">  - </span>无序列表</span><br><span class="line"><span class="bullet">    - </span>无序列表</span><br><span class="line"><span class="bullet">* </span>无序列表</span><br><span class="line"><span class="bullet">+ </span>无序列表</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<ul>
<li>无序列表<ul>
<li>无序列表<ul>
<li>无序列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>无序列表</li>
</ul>
<ul>
<li>无序列表</li>
</ul>
</blockquote>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>用<strong>后面带<code>.</code>的数字</strong>置于行首，用两个空格分级。有序列表会<strong>从第一个条目前面的数字开始排序</strong>，为了便于插入新的条目，建议第一个条目用<code>1</code>，其他条目用<code>0</code>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>有序列表</span><br><span class="line"><span class="bullet">0. </span>有序列表</span><br><span class="line"><span class="bullet">  1. </span>有序列表</span><br><span class="line"><span class="bullet">  0. </span>有序列表</span><br><span class="line"><span class="bullet">  0. </span>有序列表</span><br><span class="line"><span class="bullet">0. </span>有序列表</span><br><span class="line"><span class="bullet">0. </span>有序列表</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<ol>
<li>有序列表</li>
<li>有序列表<ol>
<li>有序列表</li>
<li>有序列表</li>
<li>有序列表</li>
</ol>
</li>
<li>有序列表</li>
<li>有序列表</li>
</ol>
</blockquote>
<p>&nbsp;</p>
<h1 id="超文本链接"><a href="#超文本链接" class="headerlink" title="超文本链接"></a>超文本链接</h1><p>超文本链接有以下四种写法，<strong>前两种写法</strong>会将链接直接显示出来，<strong>第三种写法</strong>可以显示指定的文字，<strong>第四种写法</strong>可以增加一个鼠标悬停的标题。 </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">https://hengistyoo.github.io/</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">https:</span>//<span class="attr">hengistyoo.github.io</span>/&gt;</span></span></span><br><span class="line">[<span class="string">豆豆的小笔记</span>](<span class="link">https://hengistyoo.github.io/</span>)</span><br><span class="line">[<span class="string">豆豆的小笔记</span>](<span class="link">https://hengistyoo.github.io/ "你好呀，我是豆豆！"</span>)</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p><a href="https://hengistyoo.github.io/">https://hengistyoo.github.io/</a><br><a href="https://hengistyoo.github.io/">https://hengistyoo.github.io/</a><br><a href="https://hengistyoo.github.io/">豆豆的小笔记</a><br><a href="https://hengistyoo.github.io/" title="你好呀，我是豆豆！">豆豆的小笔记</a></p>
</blockquote>
<p>&nbsp;</p>
<h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><p>用反单引号<code>`</code>符号来引用，如果要引用反单引号，则可以使用<strong>一对两个反单引号</strong>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">您可以使用<span class="code">`add(x,y)`</span>函数计算两个数的和。</span><br><span class="line">反单引号是<span class="code">```</span>`` 。</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>您可以使用<code>add(x,y)</code>函数计算两个数的和。<br>反单引号是<code>`</code>。</p>
</blockquote>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>用<strong>连续三个</strong><code>`</code>或<code>~</code>来显示代码块，可以在第一行末尾注明代码的语言名。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">​<span class="code">```</span>c++</span><br><span class="line">int main()&#123;</span><br><span class="line"><span class="code">    return 0;</span></span><br><span class="line">&#125;</span><br><span class="line">​</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">效果如下：</span><br><span class="line"></span><br><span class="line">&gt; &#96;&#96;&#96;c++</span><br><span class="line">&gt; int main()&#123;</span><br><span class="line">&gt;     return 0;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>


<p>&nbsp;</p>
<h1 id="图片显示"><a href="#图片显示" class="headerlink" title="图片显示"></a>图片显示</h1><h2 id="无链接图片"><a href="#无链接图片" class="headerlink" title="无链接图片"></a>无链接图片</h2><p>使用<code>![]()</code>来显示图片，方括号中填写的是<strong>alt文字</strong>，即在找不到图片或图片加载出来之前显示的文字；圆括号中填写的是<strong>图片url</strong>和<strong>图片title</strong>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">Doge</span>](<span class="link">dog.jpeg "狗子"</span>)</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p><img src="dog.jpeg" alt="Doge" title="狗子"></p>
</blockquote>
<h2 id="带链接图片"><a href="#带链接图片" class="headerlink" title="带链接图片"></a>带链接图片</h2><p>将<strong>超链接的语法套在图片的语法上</strong>，即<code>[![]()]()</code>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">![Doge</span>](<span class="link">dog.jpeg "狗子"</span>)](<span class="link">https://hengistyoo.github.io/ "你好呀，我是豆豆！"</span>)</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p><a href="https://hengistyoo.github.io/" title="你好呀，我是豆豆！"><img src="dog.jpeg" alt="Doge" title="狗子"></a></p>
</blockquote>
<p>&nbsp;</p>
<h1 id="表格显示"><a href="#表格显示" class="headerlink" title="表格显示"></a>表格显示</h1><h2 id="表格制作"><a href="#表格制作" class="headerlink" title="表格制作"></a>表格制作</h2><p>使用<code>-</code>和<code>|</code>来制作表格。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| TH1  | TH2  | TH3  |</span><br><span class="line">| ---- | ---- | ---- |</span><br><span class="line">| TD1  | TD2  | TD3  |</span><br><span class="line">| TD4  | TD5  | TD6  |</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<table>
<thead>
<tr>
<th>TH1</th>
<th>TH2</th>
<th>TH3</th>
</tr>
</thead>
<tbody><tr>
<td>TD1</td>
<td>TD2</td>
<td>TD3</td>
</tr>
<tr>
<td>TD4</td>
<td>TD5</td>
<td>TD6</td>
</tr>
</tbody></table>
<h2 id="表格对齐"><a href="#表格对齐" class="headerlink" title="表格对齐"></a>表格对齐</h2><p>使用<code>:</code>来实现表格对齐。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| TH1  | TH2  | TH3  |</span><br><span class="line">| :--- | :---: | ---: |</span><br><span class="line">| TD1  | TD2  | TD3  |</span><br><span class="line">| TD4  | TD5  | TD6  |</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<table>
<thead>
<tr>
<th align="left">TH1</th>
<th align="center">TH2</th>
<th align="right">TH3</th>
</tr>
</thead>
<tbody><tr>
<td align="left">TD1</td>
<td align="center">TD2</td>
<td align="right">TD3</td>
</tr>
<tr>
<td align="left">TD4</td>
<td align="center">TD5</td>
<td align="right">TD6</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>基本语法</tag>
      </tags>
  </entry>
  <entry>
    <title>「Hexo_01」使用Hexo搭建Blog</title>
    <url>/2020/02/26/hexo-01/</url>
    <content><![CDATA[<h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><ol>
<li>Node.js是一个基于Chrome V8引擎的<strong>JavaScript运行环境</strong>。需要进入<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js官网</a>下载安装。</li>
<li><strong>测试安装成功</strong>需要在<code>cmd</code>中输入<code>node -v</code>，输出Node.js的版本号即为安装成功。</li>
</ol>
<h1 id="注册代码托管平台"><a href="#注册代码托管平台" class="headerlink" title="注册代码托管平台"></a>注册代码托管平台</h1><blockquote>
<p>为了后期部署方便，这里建议使用<strong>同一个</strong>邮箱来注册不同平台。</p>
</blockquote>
<h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><ol>
<li>登录<a href="https://github.com/" target="_blank" rel="noopener">GitHub网站</a>注册GitHub账号。</li>
<li>点击<strong>New repository</strong>按钮新建仓库，仓库命名要和GitHub的用户名<strong>保持一致</strong>，例如我的GitHub的用户名为<strong>HengistYoo</strong>，我这里的仓库名就叫做<strong>HengistYoo.github.io</strong>。仓库的其他参数保持默认即可。</li>
</ol>
<h2 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h2><ol>
<li>登录<a href="https://gitee.com/" target="_blank" rel="noopener">码云网站</a>注册账号。</li>
<li>点击<strong>新建仓库</strong>按钮新建仓库，仓库命名要和Gitee的用户名<strong>保持一致</strong>，例如我的Gitee的用户名为<strong>HengistYoo</strong>，我这里的仓库名就叫做<strong>HengistYoo</strong>，注意这里的命名<strong>和GitHub不同</strong>。仓库的其他参数保持默认即可。</li>
</ol>
<h1 id="安装Git-for-Windows"><a href="#安装Git-for-Windows" class="headerlink" title="安装Git for Windows"></a>安装Git for Windows</h1><blockquote>
<p>由于我使用的是Windows 10平台部署的，所以这里以Git for Windows为例。</p>
</blockquote>
<ol>
<li><p>Git是一个管理项目的工具，这里用来向代码托管平台上传更新的代码。需要进入<a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git for Windows官网</a>下载安装。这里需要注意，<strong>不是</strong>下载GitHub桌面版。</p>
</li>
<li><p><strong>测试安装成功</strong>需要在<code>cmd</code>中输入<code>git --version</code>，输出Git的版本号即为安装成功。</p>
</li>
</ol>
<h1 id="托管平台SSH配置"><a href="#托管平台SSH配置" class="headerlink" title="托管平台SSH配置"></a>托管平台SSH配置</h1><blockquote>
<p>上传代码可以通过远程SSH链接，其中使用SSH Keys来进行远程登录安全验证。</p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>搭建博客</tag>
      </tags>
  </entry>
</search>
